run_configurations:
  "cpp-serial":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 1
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/C-SER"
    build_commands:
      - "make"
    run_command: "./cfd"

  "fortran-serial":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 1
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/F-SER"
    build_commands:
      - "make"
    run_command: "./cfd"

  "rust-serial":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 1
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/cfd"
    build_commands:
      - "cargo build --release"
    run_command: "./target/release/cfd"

  "cpp-openmp":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 32
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/C-OMP"
    build_commands:
      - "make"
    run_command: "./cfd"

  "fortran-openmp":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 32
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/F-OMP"
    build_commands:
      - "make"
    run_command: "./cfd"

  "rust-rayon":
    sbatch_config:
      "nodes": 1
      "ntasks-per-node": 1
      "cpus-per-task": 32
      "exclusive": "mcs"
      "mem": 60000
    module_loads: []
    environment_variables: {}
    directory: "./generated_results/eurocc_cfd-kudu-results/eurocc_cfd/cfd_rayon"
    build_commands:
      - "cargo build --release"
    run_command: "./target/release/cfd"

benches:
  "serial":
    run_configurations:
      - "rust-serial"
      - "cpp-serial"
      - "fortran-serial"
    reruns:
      number: 5
      unaggregatable_metrics:
        - "Scale factor"
        - "Iterations"
        - "Grid x size"
        - "Problem size"
    matrix:
      args:
        - "1 5000"
        - "2 5000"
        - "4 5000"
        - "8 5000"
        - "16 5000"
        - "32 5000"
        - "64 5000"
        - "128 5000"
    analysis:
      metrics:
        "Scale factor": "Scale [F|f]actor =\\s+(\\d+),"
        "Iterations": ", iterations =\\s+(\\d+)"
        "Grid x size": "Running CFD on\\s+(\\d+) x\\s+\\d+ grid"
        "Problem size": "=== RUN INSTANTIATION ===\n\\{.*args: (\\d+) .*\\}"
        "Total time (s)": "Time for\\s+\\d+ iterations was\\s+([\\d\\.eE\\-+]+)\\s+seconds"
        "Iteration time (s)": "Each i?n?d?i?v?i?d?u?a?l? ?iteration took\\s+([\\d\\.eE\\-+]+)\\s+seconds"
      derived_metrics:
        "Iterations per second": "1 / metrics['Iteration time (s)']"
        "Execution time relative to C++": "metrics['Iteration time (s)'] / _corresponding_metrics['cpp-serial']['Iteration time (s)']"
      line_plots:
        - title: "Serial Implementation Comparison"
          x: "Problem size"
          y: "Total time (s)"
          y_log: True
          tikz_output: "tikz_outputs/replication_study/serial.tex"
        - title: "Relative execution times to C++"
          x: "Problem size"
          y: "Execution time relative to C++"
          y_lim: [0.6, 2.2]
          tikz_output: "tikz_outputs/replication_study/serial_relative.tex"

  "parallel":
    run_configurations:
      - "rust-rayon"
      - "cpp-openmp"
      - "fortran-openmp"
    reruns:
      number: 5
      unaggregatable_metrics:
        - "Scale factor"
        - "Iterations"
        - "Grid x size"
        - "Problem size"
        - "Thread count"
    matrix:
      args:
        - "1 5000"
        - "2 5000"
        - "4 5000"
        - "8 5000"
        - "16 5000"
        - "32 5000"
        - "64 5000"
        - "128 5000"
      environment_variables:
        - { "OMP_NUM_THREADS": 1, "RAYON_NUM_THREADS": 1 }
        - { "OMP_NUM_THREADS": 2, "RAYON_NUM_THREADS": 2 }
        - { "OMP_NUM_THREADS": 4, "RAYON_NUM_THREADS": 4 }
        - { "OMP_NUM_THREADS": 8, "RAYON_NUM_THREADS": 8 }
        - { "OMP_NUM_THREADS": 16, "RAYON_NUM_THREADS": 16 }
        - { "OMP_NUM_THREADS": 32, "RAYON_NUM_THREADS": 32 }
    analysis:
      metrics:
        "Scale factor": "Scale [F|f]actor =\\s+(\\d+),"
        "Iterations": ", iterations =\\s+(\\d+)"
        "Grid x size": "Running CFD on\\s+(\\d+) x\\s+\\d+ grid"
        "Problem size": "=== RUN INSTANTIATION ===\n\\{.*args: (\\d+) .*\\}"
        "Total time (s)": "Time for\\s+\\d+ iterations was\\s+([\\d\\.eE\\-+]+)\\s+seconds"
        "Iteration time (s)": "Each i?n?d?i?v?i?d?u?a?l? ?iteration took\\s+([\\d\\.eE\\-+]+)\\s+seconds"
        "Thread count": "=== RUN INSTANTIATION ===\n\\{.*environment_variables: \\{.*OMP_NUM_THREADS: (\\d+),.*\\}"
      derived_metrics:
        "Iterations per second": "1 / metrics['Iteration time (s)']"
        "Execution time relative to C++": "metrics['Iteration time (s)'] / _corresponding_metrics['cpp-openmp']['Iteration time (s)']"
      line_plots:
        - title: "Iterations per second scaling with number of threads"
          x: "Thread count"
          y: "Iterations per second"
          y_log: True
          fix_metrics:
            "Problem size": "1"
          tikz_output: "tikz_outputs/replication_study/iterations_threads_1.tex"
        - title: "Iterations per second scaling with number of threads"
          x: "Thread count"
          y: "Iterations per second"
          y_log: True
          fix_metrics:
            "Problem size": "16"
          tikz_output: "tikz_outputs/replication_study/iterations_threads_16.tex"
        - title: "Iterations per second scaling with number of threads"
          x: "Thread count"
          y: "Iterations per second"
          y_log: True
          fix_metrics:
            "Problem size": "128"
          tikz_output: "tikz_outputs/replication_study/iterations_threads_128.tex"
